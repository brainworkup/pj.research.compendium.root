---
title: "pj.research.compendium.root"
author: "Joey Trampush"
date: today
---

## Setup

```{r}
library(sketchy)
library(vertical)
library(rcompendium)
library(sinew)

rcompendium::new_compendium(
  compendium = ".",
  license = "MIT",
  status = "active",
  lifecycle = "experimental",
  vignette = FALSE,
  test = FALSE,
  create_repo = TRUE,
  private = TRUE,
  gh_check = TRUE,
  codecov = TRUE,
  website = FALSE,
  gh_render = TRUE,
  organisation = NULL,
  renv = FALSE,
  dockerfile = TRUE,
  overwrite = FALSE,
  quiet = FALSE
)

update.packages(ask = FALSE, checkBuilt = TRUE)

tinytex::tlmgr_update()

### pak

install.packages("pak", repos = sprintf(
  "https://r-lib.github.io/p/pak/stable/%s/%s/%s",
  .Platform$pkgType,
  R.Version()$os,
  R.Version()$arch
))

pak::lockfile_create()

pak::pkg_install("brainworkup/bwu")

pak::pkg_install("brainworkup/bwu", dependencies = TRUE)

```

```{r}
 ## rcompendium  
rcompendium::refresh()

rcompendium::refresh(
  compendium = ".",
  make = TRUE,
  check = TRUE,
  quiet = FALSE
)
# Add dependencies in DESCRIPTION
rcompendium::add_dependencies()

# Add minimal R version to DESCRIPTION
rcompendium::add_r_depend()
	
# Add to the .gitignore file
rcompendium::add_to_gitignore("renv/")

# Add to the .Rbuildignore file
rcompendium::add_to_buildignore(c(
  "bibliography.bib", 
  "code/",
  "dendron.yml",
  "docs/", 
  "elsarticle-num.bst", 
  "elsarticle.cls",
  "index.qmd", 
  "index.spl",
  "index.tex", 
  "pj.research.compendium.root.code-workspace",
  "pj.research.compendium.root.qmd",
  "pkg.lock")
)

# Setup GitHub Actions to check package
rcompendium::add_github_actions_check()

# # Setup GitHub Actions to build and deploy package website
# rcompendium::add_github_actions_pkgdown()
	
# Setup GitHub Actions to report code coverage
rcompendium::add_github_actions_codecov()
	
# Setup GitHub Actions to render README
rcompendium::add_github_actions_render()

# Get all external dependencies
rcompendium::get_all_dependencies(pkg = "tidytable")

```

```{r}
## rrtools
# adds analysis folders w Quarto
rrtools::use_analysis()
rrtools::use_dockerfile()
```

```{r}
## vertical

# Initialize manuscript
vertical::init_papaja()

# Initialize posters
vertical::init_poster()

# Initialize slides
vertical::init_slides()

# Initialize supplemental materials
vertical::init_som()

```

```{r}

# Add renv
rcompendium::add_renv()

pkg_dir_R <- "R/"
sinew::pretty_namespace(pkg_dir_R, overwrite = TRUE)
sinew::sinew_opts$set(markdown_links = TRUE)
sinew::makeOxyFile(input = pkg_dir_R, overwrite = TRUE, verbose = FALSE)

```

```{r}
## Example data preprocessing script

# Load data
mydata <- data.frame(a = 1, b = 2)

# Processing ...

usethis::use_data(mydata)
```

## Workflow

```{r}
# Use devtools::document() to update the NAMESPACE
devtools::document()
# Use rcompendium::add_dependencies(".") to update the list of required dependencies in DESCRIPTION
rcompendium::add_dependencies(".")
# Do not use install.packages() but remotes::install_deps() (this will install required dependencies listed in DESCRIPTION)
remotes::install_deps()
# Do not use library() but devtools::load_all() (this will load required dependencies listed in DESCRIPTION and R functions stored in R/)
devtools::load_all()
# Do not source your functions but use instead devtools::load_all()
devtools::load_all()

## Check package ----

devtools::check()

## Example: use of an add_*() function ...
## ... update 'Number of Dependencies Badge' in README.Rmd ----

rcompendium::add_dependencies_badge()

```
